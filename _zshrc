ZSH=$HOME/.oh-my-zsh
export ZSH_THEME="xiong-chiamiov-plus"
export UPDATE_ZSH_DAYS=13

plugins=(
    aws
    colorize
    git
    go
    pip
    python
    docker
    docker-compose
    brew
    virtualenvwrapper
    tmux
    zsh-syntax-highlighting  # has to be the last
    )

# Aliases
alias ls="ls --ignore='*.pyc'"
alias ll="ls -la"
alias pp="ipython"
alias grep='grep --exclude-dir="\.svn" -I -n'
alias nassh='ssh admin@50.19.129.245'
alias tessh='ssh root@test-app'
alias webrestart='sudo /etc/init.d/apache2 restart'
alias webtail='ssh root@test-app "tail -f /opt/logs/www.log"'
alias apptail='ssh root@test-app "tail -f /opt/logs/appsrv.log"'
alias cdricapi='cd /opt/application/rounds/'
alias cdlive='cd /opt/application/live/appserver/'
alias cdubik='cd /opt/application/ubik/'
alias cdrvidyo='cd /opt/Vidyo-ServerSDK/samples/rvidyo'
alias resource='source $ZSH/oh-my-zsh.sh'
alias gh=hub
alias ubik='ssh -i ~/.ssh/ansible -t ubuntu@54.88.161.216 "cd /opt/ubik; bash"'

# Customize to your needs...

#export PS1="$PS1`~/bin/svn-ps1.py`"

function dockerrmall {
    docker rm `docker ps --all | awk '{print $1}' | tail +2`
    docker images -qf dangling=true | xargs -I {} docker rmi -f {} &&     docker images | grep "^<none>" | awk "{print }" | xargs -I {} docker rmi -f
}

alias dockerrmallimages="rm -rf ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2"

function sshans {
	ssh -i ~/.ssh/ansible ubuntu@$*
}

# ansible with digital
function sshdgtl {
	ssh -i ~/.ssh/ansible root@$*
}

function sshpup {
	ssh -i ~/.ssh/puppeteer ec2-user@$*
}

function sshdio {
	ssh -i ~/.ssh/dimadio ec2-user@$*
}

function fn {
    find . -not -path '*/\.*' -type f -name "*$**"
}

function vimg {
    vim `ag -l "$*"`
}

function vimf {
    vim `fn "$*"`
}

function rsharkz () {
    ssh "$@" "sudo tcpdump -i any -s 0 -w - 'not port 22' | bzip2 --stdout --fast" | bzip2 --decompress - | pv | wireshark -S -l -k -N mnNtCd -i - 2> /dev/null
}

function rshark () {
    ssh "$@" "sudo tcpdump -i any -s 0 -w - 'not port 22'" | pv | wireshark -S -l -k -N mnNtCd -i - 2> /dev/null
}

#
#function rshark () {
#    ssh "$@" "sudo tcpdump -i any -n -U -s 0 --buffer-size=2048 -w - 'not port 22'" | pv | wireshark -S -l -k -N mnNtCd -i - 2> /dev/null
#}
#function rsharkz () {
#    ssh "$@" "sudo tcpdump -i any -n -U -s 0 --buffer-size=2048 -w - 'not port 22' | bzip2 --stdout --fast" | bzip2 --decompress - | pv | wireshark -S -l -k -N mnNtCd -i - 2> /dev/null
#}


# bind up and down keys to filter history by the current cmd prefix
autoload up-line-or-beginning-search
autoload down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# set the key var with terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

[[ -n "${key[Up]}"      ]]  && bindkey   "${key[Up]}"       up-line-or-beginning-search
[[ -n "${key[Down]}"    ]]  && bindkey   "${key[Down]}"    down-line-or-beginning-search

# double ctrl-x will show all history options:
autoload -Uz history-beginning-search-menu
zle -N history-beginning-search-menu
bindkey '^X^X' history-beginning-search-menu

fpath=(~/.zsh-completions/src $fpath)
unsetopt correct_all
source ~/.profile
export PATH=/usr/local/bin:~/Workspace/misc/devops_scripts/:$PATH

# GO
# godoc
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export PATH="~/google-cloud-sdk/bin:$PATH"
[[ -s "/Users/doody/.gvm/scripts/gvm" ]] && source "/Users/doody/.gvm/scripts/gvm"

# PYTHON
export WORKON_HOME=~/virtualenvwrapper
source /usr/local/bin/virtualenvwrapper.sh
source ~/.zshrc_secret

# Source OH MY ZSH
source $ZSH/oh-my-zsh.sh
alias vpn='sshuttle -v -r ssh-gw.rounds.com --dns 0.0.0.0/0'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# core utils
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f /Users/doody/Downloads/google-cloud-sdk/path.zsh.inc ]; then
  source '/Users/doody/Downloads/google-cloud-sdk/path.zsh.inc'
fi

# The next line enables shell command completion for gcloud.
if [ -f /Users/doody/Downloads/google-cloud-sdk/completion.zsh.inc ]; then
  source '/Users/doody/Downloads/google-cloud-sdk/completion.zsh.inc'
fi
